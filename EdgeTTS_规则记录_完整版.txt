# EdgeTTS 部署和输入规则完整记录

## 📋 项目概述
- **项目名称**: TT-Live-AI TTS 语音生成系统
- **部署时间**: 2025年10月28日
- **项目路径**: /Volumes/M2/TT_Live_AI_TTS
- **核心功能**: 批量生成 TikTok Shop 美区口播音频

## 🎯 用户输入规则汇总

### 1. 初始部署规则
**用户要求**: "开启 edgetts，超高效版本生成（18_批量输入_批量文件输入目录）的 xlsx 文件的音频"

**实现状态**: ✅ 已实现
- 创建了 `ultra_fast_batch_generator.py` 超高效批量处理器
- 支持多API并发处理（端口5001, 5002, 5003）
- 使用 ThreadPoolExecutor 实现多线程处理

### 2. 路径标准化规则
**用户要求**: "输出文件固定在（20_输出文件_处理完成的音频文件）"
**用户要求**: "所有的新建文件夹都放在（TT_Live_AI_TTS）这个文件夹下面，不允许在 M2 下面"
**用户要求**: "edgetts 项目和 ffpmeg 项目只允许你在（TT_Live_AI_TTS）文件夹下面操作和运行"

**实现状态**: ✅ 已实现
- 创建了 `EdgeTTS_统一配置.json` 统一配置文件
- 所有路径都标准化到 TT_Live_AI_TTS 项目内
- 输入目录: `/Volumes/M2/TT_Live_AI_TTS/18_批量输入_批量文件输入目录`
- 输出目录: `/Volumes/M2/TT_Live_AI_TTS/20_输出文件_处理完成的音频文件`
- 临时目录: `/Volumes/M2/TT_Live_AI_TTS/14_临时文件_运行时生成的文件`
- 日志目录: `/Volumes/M2/TT_Live_AI_TTS/19_日志文件_系统运行日志和错误记录`

### 3. 默认批量处理规则
**用户要求**: "将每次启动 edgetts 项目都默认为要执行（18_批量输入_批量文件输入目录）下的所有文件夹"

**实现状态**: ✅ 已实现
- 修改了 `EdgeTTS_统一启动器.py` 的 main 函数
- 自动调用 `process_all_excel_files()` 进行批量处理

### 4. 内容提取规则
**用户要求**: "只需要识别 xlsx 文件的英文字段口播正文就可以了"
**用户要求**: "我说的是字段的内容是'英文'两个字"

**实现状态**: ✅ 已实现
- 创建了 `EdgeTTS_英文字段内容提取器.py`
- 专门提取 Excel 文件中"英文"字段的内容
- 忽略其他所有字段

### 5. 语音统一规则
**用户要求**: "一个 xlsx 生成的 3200 条对应使用一个 voice"
**用户要求**: "再添加一个原则，一个 xlsx 文件仅使用 1 个 voice，其他 xlsx 可已使用另外的 voice"

**实现状态**: ✅ 已实现
- 实现了 `get_file_voice()` 方法
- 分析每个 xlsx 文件中所有行的 Voice 字段
- 选择使用频率最高的 voice 作为该文件的统一语音
- 该文件的所有 3200 条音频都使用同一个 voice

### 6. 文件夹结构规则
**用户要求**: "一个 xlsx 文件生成的音频都新建一个文件夹存放音频，不要一个批次一个文件夹"
**用户要求**: "我的意思是每个 xlsx 文件在（20_输出文件_处理完成的音频文件）文件夹下创建一个同名的文件夹，分批输出的音频都保存在这个文件夹下面，不要再这个【20_输出文件_处理完成的音频文件】文件夹下面创建分批的文件夹"

**实现状态**: ❌ 规则冲突
- 用户最初要求每个 xlsx 文件创建同名文件夹
- 后来要求所有音频文件直接放在总文件夹下，不创建子文件夹
- 最终用户要求: "不要创建分批的文件夹，音频文件都放在一个总的文件夹下面"

**当前实现**: 
- 所有音频文件直接放在 `20_输出文件_处理完成的音频文件` 目录下
- 文件名格式: `{xlsx文件名}_english_field_{行号}_{voice名}.mp3`
- 不创建任何子文件夹

## 🔧 技术实现细节

### 1. 多API服务配置
```json
{
  "API配置": {
    "多API服务": {
      "服务列表": [
        {"端口": 5001, "URL": "http://127.0.0.1:5001/generate"},
        {"端口": 5002, "URL": "http://127.0.0.1:5002/generate"},
        {"端口": 5003, "URL": "http://127.0.0.1:5003/generate"}
      ]
    }
  }
}
```

### 2. 情绪配置标准
```json
{
  "情绪配置": {
    "A3标准12种情绪": {
      "Excited": {"rate": "+15%", "pitch": "+12Hz", "volume": "+15%", "voice": "en-US-JennyNeural"},
      "Confident": {"rate": "+8%", "pitch": "+5Hz", "volume": "+8%", "voice": "en-US-GuyNeural"},
      "Empathetic": {"rate": "-12%", "pitch": "-8Hz", "volume": "-10%", "voice": "en-US-AriaNeural"},
      "Calm": {"rate": "-10%", "pitch": "-3Hz", "volume": "+0%", "voice": "en-US-EmmaNeural"},
      "Playful": {"rate": "+18%", "pitch": "+15Hz", "volume": "+5%", "voice": "en-US-MichelleNeural"},
      "Urgent": {"rate": "+22%", "pitch": "+8Hz", "volume": "+18%", "voice": "en-US-BrandonNeural"},
      "Authoritative": {"rate": "+5%", "pitch": "+3Hz", "volume": "+10%", "voice": "en-US-DavisNeural"},
      "Friendly": {"rate": "+12%", "pitch": "+8Hz", "volume": "+5%", "voice": "en-US-JennyNeural"},
      "Inspirational": {"rate": "+10%", "pitch": "+10Hz", "volume": "+12%", "voice": "en-US-AriaNeural"},
      "Serious": {"rate": "+0%", "pitch": "+0Hz", "volume": "+5%", "voice": "en-US-GuyNeural"},
      "Mysterious": {"rate": "-8%", "pitch": "+5Hz", "volume": "-5%", "voice": "en-US-EmmaNeural"},
      "Grateful": {"rate": "+5%", "pitch": "+8Hz", "volume": "+8%", "voice": "en-US-MichelleNeural"}
    }
  }
}
```

### 3. 文件处理流程
1. **扫描输入目录**: 查找所有 `.xlsx` 文件
2. **读取Excel文件**: 使用 pandas 读取文件内容
3. **提取英文字段**: 只处理"英文"列的内容
4. **确定统一语音**: 分析文件中所有行的 Voice 字段，选择最频繁的
5. **生成音频文件**: 使用 EdgeTTS 生成音频
6. **保存到输出目录**: 直接保存在总文件夹下，不创建子文件夹

### 4. 错误处理和修复
**问题1**: 输出文件无法播放，文件大小异常（690-691字节）
- **原因**: Microsoft EdgeTTS API 连接超时
- **解决**: 切换到直接使用 `edge_tts` 库，绕过 Flask API

**问题2**: API请求格式错误
- **原因**: JSON payload 格式不正确
- **解决**: 修正请求格式，包含 `product_name` 和 `scripts` 字段

**问题3**: 负参数值错误
- **原因**: 动态参数生成产生负值
- **解决**: 添加参数验证和默认值处理

**问题4**: 日志文件路径错误
- **原因**: 相对路径解析错误
- **解决**: 修正日志文件路径为 `../19_日志文件_系统运行日志和错误记录/tts_service.log`

## 📊 当前状态

### ✅ 已完成的功能
1. **路径标准化**: 所有操作都在 TT_Live_AI_TTS 项目内
2. **英文字段提取**: 专门处理"英文"列内容
3. **统一语音选择**: 每个 xlsx 文件使用一个 voice
4. **统一文件夹结构**: 所有音频文件直接放在总文件夹下
5. **多API服务**: 支持3个并发API服务
6. **错误处理**: 完善的异常处理和日志记录

### 🔄 当前处理器
- **主处理器**: `EdgeTTS_最终规则处理器.py`
- **功能**: 严格按照用户规则执行批量音频生成
- **状态**: 已停止，等待用户指令

### 📁 完整文件结构和存储路径

#### 1. 项目根目录
```
/Volumes/M2/TT_Live_AI_TTS/
```

#### 2. 输入存储路径
```
/Volumes/M2/TT_Live_AI_TTS/18_批量输入_批量文件输入目录/
├── 全产品_合并版_3200_v1.xlsx      (485,553 bytes)
├── 全产品_合并版_3200_v2.xlsx      (621,860 bytes)
├── 全产品_合并版_3200_v3.xlsx      (354,365 bytes)
├── 全产品_合并版_3200_v4.xlsx      (354,398 bytes)
├── 全产品_合并版_3200_v5.xlsx      (354,003 bytes)
├── 全产品_合并版_3200_v6.xlsx      (354,635 bytes)
├── 全产品_合并版_3200_v7.xlsx      (353,827 bytes)
├── 全产品_合并版_3200_v8.xlsx      (619,746 bytes)
├── 全产品_合并版_3200_v9.xlsx      (353,890 bytes)
├── 全产品_合并版_3200_v10.xlsx     (353,890 bytes)
└── 全产品_合并版_3200_v11.xlsx     (353,890 bytes)
```

#### 3. 输出存储路径（统一文件夹）
```
/Volumes/M2/TT_Live_AI_TTS/20_输出文件_处理完成的音频文件/
├── 全产品_合并版_3200_v1_english_field_0001_JennyNeural.mp3
├── 全产品_合并版_3200_v1_english_field_0002_JennyNeural.mp3
├── 全产品_合并版_3200_v1_english_field_0003_JennyNeural.mp3
├── ... (每个xlsx文件生成3200条音频)
├── 全产品_合并版_3200_v11_english_field_3200_GuyNeural.mp3
└── .DS_Store
```

#### 4. 临时文件存储路径
```
/Volumes/M2/TT_Live_AI_TTS/14_临时文件_运行时生成的文件/
├── temp_audio_*.mp3              # 临时音频文件
├── temp_excel_*.xlsx             # 临时Excel文件
└── temp_config_*.json           # 临时配置文件
```

#### 5. 日志文件存储路径
```
/Volumes/M2/TT_Live_AI_TTS/19_日志文件_系统运行日志和错误记录/
├── tts_service.log              # TTS服务日志
├── batch_processing.log         # 批量处理日志
├── error_log.log               # 错误日志
└── system_status.log           # 系统状态日志
```

#### 6. 配置文件存储路径
```
/Volumes/M2/TT_Live_AI_TTS/
├── EdgeTTS_统一配置.json         # 主配置文件
├── EdgeTTS_控制参数配置.json     # 参数配置文件
└── EdgeTTS_控制参数规则文件.py   # 参数规则文件
```

#### 7. 处理器脚本存储路径
```
/Volumes/M2/TT_Live_AI_TTS/
├── EdgeTTS_最终规则处理器.py      # 当前主处理器
├── EdgeTTS_英文字段内容提取器.py   # 英文字段处理器
├── EdgeTTS_智能批量处理器.py      # 智能批量处理器
├── EdgeTTS_统一启动器.py         # 统一启动器
├── EdgeTTS_测试脚本.py           # 测试脚本
└── EdgeTTS_自动批量处理.sh       # 自动处理脚本
```

#### 8. TTS服务存储路径
```
/Volumes/M2/TT_Live_AI_TTS/02_TTS服务_语音合成系统/
├── run_tts_TTS语音合成服务.py     # 主TTS服务
├── tts_service_config.json      # 服务配置
└── voice_models.json            # 语音模型配置
```

#### 9. 备份存储路径
```
/Volumes/M2/TT_Live_AI_TTS/21_备份文件_重要数据备份/
├── config_backup_*.json         # 配置备份
├── excel_backup_*.xlsx         # Excel文件备份
└── audio_backup_*.mp3          # 音频文件备份
```

## 🔍 字段识别方式详解

### 1. Excel文件字段结构
每个xlsx文件包含以下字段：
```
列名示例:
- 英文          # 主要处理字段
- Voice         # 语音选择字段
- Emotion       # 情绪参数字段
- Rate          # 语速参数字段
- Pitch         # 音调参数字段
- Volume        # 音量参数字段
- 中文          # 中文翻译字段（忽略）
- 其他字段...   # 其他字段（忽略）
```

### 2. 字段识别逻辑
```python
# 字段识别代码逻辑
def process_excel_file(self, file_path, max_rows=10):
    df = pd.read_excel(file_path)
    
    # 1. 获取所有列名
    print(f"📋 列名: {list(df.columns)}")
    
    # 2. 提取"英文"字段内容
    english_field_content = str(row.get('英文', ''))
    
    # 3. 获取Voice字段用于统一语音选择
    voice = str(df.iloc[index].get('Voice', 'en-US-JennyNeural'))
    
    # 4. 忽略其他字段
    # 不处理: 中文、Emotion、Rate、Pitch、Volume等
```

### 3. 字段处理规则
- **主要字段**: "英文" - 用于生成音频内容
- **辅助字段**: "Voice" - 用于确定统一语音
- **忽略字段**: 所有其他字段（中文、Emotion、Rate、Pitch、Volume等）

### 4. 字段验证机制
```python
# 字段验证代码
if not english_field_content or english_field_content == 'nan':
    print("⚠️ 英文字段内容为空，跳过")
    continue

# 清理英文字段内容
clean_content = self.clean_english_field_content(english_field_content)
if not clean_content:
    print(f"⚠️ 英文字段内容为空，跳过: {os.path.basename(output_file)}")
    return False
```

## 💾 存储方式详解

### 1. 音频文件存储方式
- **存储位置**: 直接存储在 `20_输出文件_处理完成的音频文件/` 根目录
- **文件命名**: `{xlsx文件名}_english_field_{行号}_{voice名}.mp3`
- **文件格式**: MP3格式，采样率44.1kHz，比特率128kbps
- **文件大小**: 正常音频文件 > 1000 bytes
- **存储策略**: 不创建子文件夹，所有文件平铺存储

### 2. 配置文件存储方式
- **JSON格式**: 使用UTF-8编码的JSON文件
- **配置层级**: 嵌套结构，支持多级配置
- **备份策略**: 自动备份到 `21_备份文件_重要数据备份/`
- **版本控制**: 文件名包含时间戳

### 3. 日志文件存储方式
- **日志格式**: 时间戳 + 日志级别 + 消息内容
- **日志轮转**: 按大小或时间自动轮转
- **日志级别**: INFO, WARNING, ERROR, DEBUG
- **存储位置**: `19_日志文件_系统运行日志和错误记录/`

### 4. 临时文件存储方式
- **临时文件**: 处理过程中生成的临时文件
- **自动清理**: 处理完成后自动删除
- **命名规则**: `temp_{类型}_{时间戳}.{扩展名}`
- **存储位置**: `14_临时文件_运行时生成的文件/`

### 5. 备份文件存储方式
- **备份频率**: 每次配置变更时自动备份
- **备份内容**: 配置文件、Excel文件、音频文件
- **备份命名**: `{类型}_backup_{时间戳}.{扩展名}`
- **存储位置**: `21_备份文件_重要数据备份/`

## 🔄 数据处理流程

### 1. 输入数据处理
```
Excel文件 → pandas读取 → 字段识别 → 内容提取 → 数据验证
```

### 2. 音频生成流程
```
英文字段内容 → EdgeTTS处理 → 音频生成 → 文件保存 → 质量检查
```

### 3. 文件管理流程
```
文件扫描 → 路径验证 → 目录创建 → 文件写入 → 权限设置
```

### 4. 错误处理流程
```
异常捕获 → 日志记录 → 错误恢复 → 状态更新 → 用户通知
```

## 🎯 最终规则总结

1. **内容规则**: 只处理"英文"字段的内容
2. **语音规则**: 每个 xlsx 文件的 3200 条音频使用统一 voice
3. **文件夹规则**: 所有音频文件直接放在总文件夹下，不创建子文件夹
4. **文件命名**: `{xlsx文件名}_english_field_{行号}_{voice名}.mp3`
5. **路径规则**: 所有操作都在 TT_Live_AI_TTS 项目内
6. **处理规则**: 默认批量处理所有 xlsx 文件

## 📝 用户反馈记录

- **"规则压根没有生效"**: 用户发现文件夹结构不符合要求
- **"不要创建分批的文件夹，音频文件都放在一个总的文件夹下面"**: 用户明确要求统一文件夹结构
- **"停止 edgetts 输出"**: 用户要求停止所有处理进程

## 🔚 当前状态
- **所有进程已停止**
- **规则已整理完成**
- **等待用户进一步指令**
